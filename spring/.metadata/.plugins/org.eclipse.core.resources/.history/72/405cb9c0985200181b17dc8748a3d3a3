package daili;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

public class ProxyTest {
	
	public static void main(String[] args) {
		ProxyTest p = new ProxyTest();
		ClassLoader loader = p.getClass().getClassLoader();
		Class[] interfaces = {Waiter.class};
		InvocationHandler h = new WaiterInvocationHandler();
		ManWaiter man = (ManWaiter)Proxy.newProxyInstance(loader, interfaces, h)
	}

}

class WaiterInvocationHandler  implements InvocationHandler{

	@Override
	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
		
		return null;
	}
	
}
